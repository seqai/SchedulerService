// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchedulerService.DataAccess;

#nullable disable

namespace SchedulerService.Migrations
{
    [DbContext(typeof(SchedulerServiceDbContext))]
    [Migration("20220609201346_AddInitial")]
    partial class AddInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("CourseEntityStudyScheduleEntity", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SchedulesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CoursesId", "SchedulesId");

                    b.HasIndex("SchedulesId");

                    b.ToTable("ScheduleCourses", (string)null);
                });

            modelBuilder.Entity("SchedulerService.DataAccess.Entities.CourseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Length")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("SchedulerService.DataAccess.Entities.StudyScheduleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("SchedulerService.DataAccess.Entities.StudyWeekEntity", b =>
                {
                    b.Property<int>("ScheduleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudyHours")
                        .HasColumnType("INTEGER");

                    b.HasKey("ScheduleId", "WeekNumber");

                    b.ToTable("StudyWeekEntity");
                });

            modelBuilder.Entity("CourseEntityStudyScheduleEntity", b =>
                {
                    b.HasOne("SchedulerService.DataAccess.Entities.CourseEntity", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchedulerService.DataAccess.Entities.StudyScheduleEntity", null)
                        .WithMany()
                        .HasForeignKey("SchedulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchedulerService.DataAccess.Entities.StudyWeekEntity", b =>
                {
                    b.HasOne("SchedulerService.DataAccess.Entities.StudyScheduleEntity", null)
                        .WithMany("Weeks")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchedulerService.DataAccess.Entities.StudyScheduleEntity", b =>
                {
                    b.Navigation("Weeks");
                });
#pragma warning restore 612, 618
        }
    }
}
